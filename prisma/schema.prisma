//schema local

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  password  String
  role      String     @default("customer")
  active    Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  affiliate Affiliate?
}

model Customer {
  id        String   @id @default(cuid())
  document  String   @unique
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String
  name      String
  orders    Order[]
}

model Product {
  id          String      @id @default(cuid())
  name        String
  description String?
  active      Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  productId   Int         @default(autoincrement())
  courseId    String?
  productType String      @default("evaluation")
  orderBumpOf OrderBump[] @relation("OrderBumpProducts")
  orderBumps  OrderBump[] @relation("ProductOrderBumps")
  orderItems  OrderItem[]
  prices      Price[]
  coupons     Coupon[]    @relation("CouponToProduct")
}

model Price {
  id        String   @id @default(cuid())
  productId String
  amount    Int
  currency  String   @default("BRL")
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
}

model Order {
  id                   String     @id @default(cuid())
  customerId           String
  status               String
  amount               Int
  paymentMethod        String
  installments         Int        @default(1)
  affiliateId          String?
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  couponId             String?
  splitAmount          Float?
  pagarmeTransactionId String?    @unique
  affiliate            Affiliate? @relation(fields: [affiliateId], references: [id])
  coupon               Coupon?    @relation(fields: [couponId], references: [id])
  customer             Customer   @relation(fields: [customerId], references: [id])
  items                OrderItem[] // Adicionar esta linha
}

model OrderBump {
  id            String   @id @default(cuid())
  productId     String
  bumpProductId String
  discount      Float?
  active        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  bumpProduct   Product  @relation("OrderBumpProducts", fields: [bumpProductId], references: [id])
  product       Product  @relation("ProductOrderBumps", fields: [productId], references: [id])
}

model OrderItem {
  id        String   @id @default(cuid())
  orderId   String
  productId String
  quantity  Int
  price     Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  order     Order    @relation(fields: [orderId], references: [id]) // Adicionar esta linha
}

model Affiliate {
  id          String   @id @default(cuid())
  userId      String   @unique
  commission  Float
  active      Boolean  @default(true)
  bankInfo    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  recipientId String?  @unique
  user        User     @relation(fields: [userId], references: [id])
  orders      Order[]
}

model Coupon {
  id                 String    @id @default(cuid())
  code               String    @unique
  active             Boolean   @default(true)
  discountPercentage Int
  usageCount         Int       @default(0)
  maxUses            Int?
  expiresAt          DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  orders             Order[]
  products           Product[] @relation("CouponToProduct")
}

model CheckoutSettings {
  id                    String   @id @default(cuid())
  companyName           String
  logoUrl               String?
  primaryColor          String
  secondaryColor        String
  accentColor           String
  checkoutTitle         String
  checkoutDescription   String
  successMessage        String
  termsAndConditionsUrl String?
  privacyPolicyUrl      String?
  showInstallments      Boolean  @default(true)
  maxInstallments       Int      @default(12)
  showPixDiscount       Boolean  @default(false)
  pixDiscountPercentage Float    @default(0)
  defaultPaymentMethod  String   @default("credit_card")
  enableOrderBumps      Boolean  @default(true)
  headerBackgroundImage String?
  footerText            String?
  customCss             String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  headerMaxHeight       Int?
  headerVerticalAlign   String?
  headerEnabled         Boolean? @default(true)

  @@map("checkout_settings")
}
